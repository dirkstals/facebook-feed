*{
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

@font-face {
    font-family: "Forelle";
    src: url("Forelle.woff") format("woff");
}


html, body{
    height: 100%;
}


/**
 * See: http://www.css-101.org/articles/ken-burns_effect/css-transition.php
 */

/**
 * Styling the container (the wrapper)
 * 
 * position is used to make this box a containing block (it becomes a reference for its absolutely positioned children). overflow will hide part of the images moving outside of the box.
 */




.post__container > div {
    position:fixed;
    left: 0;
    top: 0;
    width:100%;
    height:100%;
    overflow:hidden;
    opacity: 0;
    z-index: 1;
    -webkit-transition-property: opacity;
    -webkit-transition-duration: 3s;
            transition-property: opacity;
            transition-duration: 3s;
}

/**
 * Styling the images
 *
 * position:absolute is to put all images in a stack. Dimensions are set to increase the size of these images so their edges do not appear in the parent box when we move them inside the said box.
 * Because the images are now larger than their parent container, we use top, left and margin values to align them in the center of the box.
 * Finally, we set the transition (property and duration). Note that duration values are different for opacity and transform as we want the "fade-in" effect to be faster than the "panning" effect.
 */
.post__picture {
    position:absolute;
    width: 100%;
    height: 100%;
    top: 0;
    left: 0;
}

/*
.post__picture:after{
    content: "";
    box-shadow: inset 0 -30vh 30vh 0 #fff;
    width: 100%;
    height: 100%;
    position: fixed;
}
*/

.picture {
    position:absolute;
    width: 100%;
    height: 100%;
    top: 0;
    left: 0;
    background-position: center center;
    background-size: cover;
    background-repeat: no-repeat;
    -webkit-transform: scale(1);
            transform: scale(1);
    -webkit-transition-property: -webkit-transform;
    -webkit-transition-duration: 15s;
            transition-property: transform;
            transition-duration: 15s;
}

/**
 * We change the point of origin using four corners so images do not move in the same direction. 
 * This technique allows us to create various paths while applying the same translate() values to all images (see the 'fx' class further below).
 */

.post__container .picture  {
    -webkit-transform-origin: bottom left;
            transform-origin: bottom left;
}

.post__container > div:nth-child(2n+1) .picture {
    -webkit-transform-origin: top right;
            transform-origin: top right;
}

.post__container > div:nth-child(3n+1) .picture {
    -webkit-transform-origin: top left;
            transform-origin: top left;
}

.post__container > div:nth-child(4n+1) .picture {
  -webkit-transform-origin: bottom right;
          transform-origin: bottom right;
}

/**
 * Because of the stacking context, we need to make sure that the first image (in source) is not hidden by the last one. 
 * The rule below moves all images past the second one down the stack. 
 * This is because the second image needs to show on top of the first one when it transitions in.
 */

.post__container .fx:first-child + div ~ div  {
    z-index:-1;
}

/**
 * Because images are styled with a different point of origin, the following rule will create different panning effects.
 */

.post__container .fx {
    opacity:1;
}

.post__container .fx .picture {
    -webkit-transform: scale(1.1);
            transform: scale(1.1);
}



.post__bottom{
    position: absolute;
    z-index: 1;
    bottom: 0;
    left: 0;
    right: 0;
    padding: 50px 20px 50px 50px;
    background: linear-gradient(transparent 0%, black 140%);
}

.post__from{
    width: 130px;
    height: 100px;
    display: block;
    vertical-align: text-bottom;
    display: inline-block;
    padding-right: 30px;
    position: relative;
}

.post__message{
    width: calc(100% - 130px);
    display: inline-block;
    position: relative;
}

.from{
    border-radius: 50%;
    box-shadow: 0 0 15px -5px black;
    border: 3px solid white;
    width: 100%;
}

.message{
    line-height: 1;
    font-family: "Forelle";
    font-size: 7vw;
    color: rgba(255,255,255,0.87);
    text-shadow: 0 0 20px #000;
}
